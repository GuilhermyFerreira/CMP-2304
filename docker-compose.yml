version: '3.8'

services:
  # 1. PROXY REVERSO
  nginx:
    container_name: ${PROJECT_NAME}_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - "${HOST_PORT_NGINX}:80"
    networks:
      - app-network
    depends_on:
      - frontend
      - backend

  # 2. SERVIÇO DE FRONTEND
  frontend:
    container_name: ${PROJECT_NAME}_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      VITE_API_BASE_URL: http://localhost/api 
    volumes:
      # Bind Mount para Hot-Reloading
      - ./frontend:/app
      - /app/node_modules # Impede que o 'node_modules' local sobrescreva o do container
    networks:
      - app-network

  # 3. SERVIÇO DE BACKEND
  backend:
    container_name: ${PROJECT_NAME}_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_HOST: ${POSTGRES_HOST}
      DATABASE_PORT: ${POSTGRES_PORT}
      DATABASE_USER: ${POSTGRES_USER}
      DATABASE_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_NAME: ${POSTGRES_DB}
    volumes:
      # Bind Mount para Hot-Reloading
      - ./backend:/app
      - /app/node_modules
    networks:
      - app-network
    depends_on:
      - database

  # 4. SERVIÇO DE BANCO DE DADOS
  database:
    container_name: ${PROJECT_NAME}_database
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      # Volume Nomeado para Persistência
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # 5. ADMINISTRAÇÃO DO BANCO DE DADOS
  pgadmin:
    container_name: ${PROJECT_NAME}_pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    volumes:
      # Volume Nomeado para Persistência das Configurações do PGAdmin
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "${HOST_PORT_PGADMIN}:80"
    networks:
      - app-network
    depends_on:
      - database

# Definição dos Volumes Nomeados para Persistência
volumes:
  postgres_data:
  pgadmin_data:

# Definição da Rede Bridge Customizada
networks:
  app-network:
    driver: bridge